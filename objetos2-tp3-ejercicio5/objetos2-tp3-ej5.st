Object subclass: #Topografia	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP3-EJ5-Model'!!Topografia methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:38'!proporcionAgua	^ self subclassResponsibility! !!Topografia methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:38'!proporcionTierra	^ self subclassResponsibility! !Topografia subclass: #Agua	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP3-EJ5-Model'!!Agua methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:41'!proporcionAgua	^ 1! !!Agua methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:51'!igualA: unaTopografia		^ unaTopografia proporcionAgua equals: 1! !!Agua methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 5/6/2019 19:47'!proporcionTierra	^ 0! !Topografia subclass: #Mixta	instanceVariableNames: 'partes'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP3-EJ5-Model'!!Mixta methodsFor: 'initialization' stamp: 'JulianCasaburi 3/7/2021 22:39'!initialize	partes := Dictionary new.	1 to: 4 do: [:x | partes at:x put: nil ].! !!Mixta methodsFor: 'accessing' stamp: 'JulianCasaburi 5/6/2019 20:02'!partes	^ partes! !!Mixta methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:40'!proporcionAgua		^ (partes inject: 0 into: [ :unaParte :total | unaParte proporcionAgua] / 4)! !!Mixta methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:37'!parte: numeroDeParte tipo: unObjeto	partes at: numeroDeParte put: unObjeto! !!Mixta methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:49'!igualA: unaTopografia		| partesOtra |		partesOtra := unaTopografia partes.		self partes doWithIndex: [ :unaParte :i | (unaParte value class) = ((partesOtra at:i) class) ifFalse: [^false].].	^true.! !!Mixta methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:40'!proporcionTierra		^ (partes inject: 0 into: [ :unaParte :total | unaParte proporcionTierra] / 4)! !Topografia subclass: #Tierra	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP3-EJ5-Model'!!Tierra methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:41'!proporcionAgua	^ 0! !!Tierra methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 22:51'!igualA: unaTopografia		^ unaTopografia proporcionTierra equals: 1! !!Tierra methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 5/6/2019 19:48'!proporcionTierra		^ 1! !TestCase subclass: #TopografiaTest	instanceVariableNames: 'topografia'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP3-EJ5-Tests'!!TopografiaTest methodsFor: 'initialization' stamp: 'JulianCasaburi 3/7/2021 23:00'!setUp		topografia := Mixta new.! !!TopografiaTest methodsFor: 'tests' stamp: 'JulianCasaburi 3/7/2021 23:04'!testProporcionAgua		| topografiaAgua|		topografiaAgua := Agua new.	self assert: topografiaAgua proporcionAgua equals: 1.	self assert: topografiaAgua proporcionTierra equals: 0.! !!TopografiaTest methodsFor: 'tests' stamp: 'JulianCasaburi 3/7/2021 23:01'!testParteTipo	| topografia2 topografia3 t1parte1 t1parte2 t2parte1 t2parte2|		"Topografía 1 parte 1"	t1parte1 := Agua new.	topografia parte: 1 tipo: t1parte1.	self assert: (topografia partes at: 1) className equals: 'Agua'.		"Topografía 1 parte 2"	t1parte2 := Tierra new.	topografia parte: 2 tipo: t1parte2.	self assert: (topografia partes at: 2) className equals: 'Tierra'.		topografia2 := Mixta new.		"Topografía 2 parte 1"	t2parte1 := Agua new.	topografia2 parte: 1 tipo: t2parte1.	self assert: (topografia2 partes at: 1) className equals: 'Agua'.		"Topografía 2 parte 2"	t2parte2 := Tierra new.	topografia2 parte: 2 tipo: t2parte2.	self assert: (topografia2 partes at: 2) className equals: 'Tierra'.		self assert: (topografia igualA: topografia2).	topografia3 := Mixta new.		self deny: (topografia igualA: topografia3).! !!TopografiaTest methodsFor: 'tests' stamp: 'JulianCasaburi 3/7/2021 23:04'!testProporcionTierra		| topografiaTierra |		topografiaTierra := Tierra new.	self assert: topografiaTierra proporcionTierra equals: 1.	self assert: topografiaTierra proporcionAgua equals: 0.! !
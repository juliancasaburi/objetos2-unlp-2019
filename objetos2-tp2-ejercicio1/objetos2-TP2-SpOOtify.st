Object subclass: #Album	instanceVariableNames: 'titulo temas'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!Album methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:19'!temasConTitulo: aString	"Retorna una coleccion de temas cuyo titulo contiene o es igual a aString. La busqueda es case insensitive"		| coleccionTemas |	coleccionTemas := temas select: [ :unTema | ((unTema titulo) includesSubstring: aString caseSensitive:false) ].	^ coleccionTemas.! !!Album methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/25/2019 10:53'!agregarTema: unTema	temas add: unTema.! !!Album methodsFor: 'initialization' stamp: 'JulianCasaburi 4/16/2019 17:30'!initialize	temas := Set new.! !!Album methodsFor: 'initialization' stamp: 'JulianCasaburi 4/16/2019 18:35'!initializeConTitulo: unTitulo	titulo := unTitulo.! !!Album methodsFor: 'accessing' stamp: 'JulianCasaburi 4/16/2019 17:50'!temas	^ temas! !!Album methodsFor: 'accessing' stamp: 'JulianCasaburi 4/16/2019 18:36'!titulo	^ titulo! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Album class	instanceVariableNames: ''!!Album class methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/25/2019 10:48'!conTitulo: unTitulo	^ self new initializeConTitulo: unTitulo; yourself.! !Object subclass: #Autor	instanceVariableNames: 'nombre albums'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!Autor methodsFor: 'accessing' stamp: 'JulianCasaburi 4/16/2019 17:33'!nombre	^ nombre! !!Autor methodsFor: 'accessing' stamp: 'JulianCasaburi 3/7/2021 13:30'!temas	^ albums collect: [ :unAlbum | unAlbum temas ].! !!Autor methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:30'!temasConTitulo: aString	"Retorna una colección de temas cuyo titulo contiene o es igual a aString. La búsqueda es case insensitive"	^ albums flatCollect: [ :unAlbum | unAlbum temasConTitulo: aString ].! !!Autor methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:29'!temasDeAlbum: aString	"Retorna una colección de temas cuyo titulo de álbum contiene o es igual a aString. La búsqueda es case insensitive"		| albumsMatchea temas |	temas := Set new.	albumsMatchea := albums select: [ :unAlbum | ((unAlbum titulo) includesSubstring: aString caseSensitive: false) ].	albumsMatchea do: [ :unAlbum | temas addAll: unAlbum temas ].	^ temas.! !!Autor methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/25/2019 10:54'!agregarAlbumConTitulo: unTitulo	| album |	album := Album conTitulo: unTitulo.	albums add: (album).	^ album.! !!Autor methodsFor: 'initialization' stamp: 'JulianCasaburi 3/7/2021 13:31'!initializeConNombre: unNombre	albums := Set new.	nombre := unNombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Autor class	instanceVariableNames: ''!!Autor class methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 01:51'!conNombre: unNombre	| instancia |	instancia := self new.	instancia initializeConNombre: unNombre.	^ instancia.! !Object subclass: #MyMusic	instanceVariableNames: 'temas'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!MyMusic methodsFor: 'initialization' stamp: 'JulianCasaburi 4/16/2019 17:31'!initialize	temas := Set new.! !!MyMusic methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/16/2019 17:28'!agregar: aSong"Agrega un tema a la coleccion de temas de la instancia MyMusic"	temas add: aSong.! !!MyMusic methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 01:25'!remover: aSong"Elina un tema de la coleccion de temas de la instancia MyMusic"	(temas includes: aSong)	ifTrue: [ temas remove: aSong. ].! !!MyMusic methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/25/2019 10:37'!cantidadTemas	^ temas size.! !Object subclass: #SpOOtify	instanceVariableNames: 'usuarios autores'	classVariableNames: 'UniqueInstance'	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!SpOOtify methodsFor: 'initialization' stamp: 'JulianCasaburi 4/16/2019 17:31'!initialize	usuarios := Set new.	autores := Set new.! !!SpOOtify methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/28/2019 21:00'!agregarAutor: unNombre	| autor |	autores detect: [ :unAutor | unAutor nombre = unNombre  ] ifNone: [ autor := Autor conNombre: unNombre. autores add: autor. ^ autor.].	^nil! !!SpOOtify methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:29'!buscarPorAlbum: aString	"Retorna una coleccion de temas cuyo titulo de album contiene o es igual a aString. La busqueda es case insensitive"		^autores collect: [ :unAutor | unAutor temasDeAlbum: aString ].		! !!SpOOtify methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/28/2019 21:00'!agregarUsuario: unNombre	| usuario |	(usuarios contains: [ :unUsuario | unUsuario nombre = unNombre ])		ifFalse: [ usuario:= Usuario conNombre: unNombre. usuarios add: usuario. ^ usuario].	^nil! !!SpOOtify methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:29'!buscarPorTitulo: aString	"Retorna una colección de temas cuyo titulo contiene o es igual a aString. La búsqueda es case insensitive"		^autores flatCollect:  [ :unAutor | unAutor temasConTitulo: aString ].! !!SpOOtify methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:28'!buscarPorAutor: aString	"Retorna una colección de temas cuyo nombre de autor contiene o es igual a aString. La búsqueda es case insensitive"		| autoresMatchea temasAutor|	temasAutor := Set new.	autoresMatchea := autores select: [ :unAutor | ((unAutor nombre) includesSubstring: aString caseSensitive: false) ].	autoresMatchea do: [ :unAutor | temasAutor addAll: unAutor temas ].	^ temasAutor.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SpOOtify class	instanceVariableNames: ''!!SpOOtify class methodsFor: 'accessing' stamp: 'JulianCasaburi 4/16/2019 18:01'!reset	UniqueInstance := nil.! !!SpOOtify class methodsFor: 'instance creation' stamp: 'JulianCasaburi 4/16/2019 18:02'!singleton	UniqueInstance isNil ifTrue: [ UniqueInstance := self new. ].	^UniqueInstance.! !TestCase subclass: #SpOOtifyTest	instanceVariableNames: 'spOOtify autor album tema'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!SpOOtifyTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/25/2019 11:06'!testBuscarPorTitulo	| temas |		temas := spOOtify buscarPorTitulo: 'Tema test'.	self assert: (temas includes: tema) equals: true.! !!SpOOtifyTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/25/2019 10:59'!testBuscarPorAlbum	| temas |		temas := spOOtify buscarPorAlbum: 'Album Test'.	self assert: temas size equals: 1.! !!SpOOtifyTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/25/2019 10:51'!testAgregarAutor	spOOtify agregarAutor: autor.! !!SpOOtifyTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/27/2019 01:45'!testBuscarPorAutor	| temas |		temas := spOOtify buscarPorAutor: 'Autor Test'.	self assert: temas size equals: 1.! !!SpOOtifyTest methodsFor: 'initialization' stamp: 'JulianCasaburi 4/27/2019 01:58'!setUp	SpOOtify reset.	spOOtify := SpOOtify singleton.	autor := spOOtify agregarAutor: 'Autor Test'.	tema := Tema conTitulo: 'Tema test' yGenero: 'Tema test'. 		album := autor agregarAlbumConTitulo: 'Album test'.	album agregarTema: tema.! !Object subclass: #Tema	instanceVariableNames: 'titulo genero'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!Tema methodsFor: 'initialization' stamp: 'JulianCasaburi 4/16/2019 18:34'!initializeConTitulo: unTitulo yGenero: unGenero	titulo := unTitulo.	genero := unGenero.! !!Tema methodsFor: 'accessing' stamp: 'JulianCasaburi 4/16/2019 17:34'!genero	^ genero! !!Tema methodsFor: 'accessing' stamp: 'JulianCasaburi 4/16/2019 17:34'!titulo	^ titulo! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tema class	instanceVariableNames: ''!!Tema class methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/25/2019 10:34'!conTitulo: unTitulo yGenero: unGenero	^ self new initializeConTitulo: unTitulo yGenero: unGenero; yourself.! !Object subclass: #Usuario	instanceVariableNames: 'myMusic nombre'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!Usuario methodsFor: 'initialization' stamp: 'JulianCasaburi 4/16/2019 18:26'!initializeConNombre: unNombre	myMusic := MyMusic new.	nombre := unNombre.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/16/2019 17:27'!agregar: aSong"El usuario agrega un tema a su coleccion de musica favorita"	myMusic agregar: aSong.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/16/2019 17:27'!remover: aSong"El usuario elimina un tema de su coleccion de musica favorita"	myMusic remover: aSong.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/25/2019 10:38'!cantidadTemas	^ myMusic cantidadTemas.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/25/2019 10:34'!conNombre: unNombre	^ self new initializeConNombre: unNombre; yourself.! !TestCase subclass: #UsuarioTest	instanceVariableNames: 'usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-SpOOtify'!!UsuarioTest methodsFor: 'initialization' stamp: 'JulianCasaburi 4/25/2019 10:27'!setUp	"comment stating purpose of message"	usuario := Usuario conNombre: 'Juan Carlos Batman'.	! !!UsuarioTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/27/2019 01:25'!testAgregar		| tema |		self assert: usuario cantidadTemas equals: 0.		tema := Tema conTitulo: 'Tema de Prueba' yGenero: 'Genero de Prueba'.	usuario agregar: tema. 		self assert: usuario cantidadTemas equals: 1.		usuario agregar: tema. 		self assert: usuario cantidadTemas equals: 1.! !!UsuarioTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/25/2019 10:41'!testRemover	| tema1 tema2|	self assert: usuario cantidadTemas equals: 0.	tema1 := Tema conTitulo: 'Test remover' yGenero: 'Test remover'.		usuario agregar: tema1.		self assert: usuario cantidadTemas equals: 1.	tema2 := Tema conTitulo: 'Test remover2' yGenero: 'Test remover2'. 		usuario remover: tema2.	self assert: usuario cantidadTemas equals: 1.		usuario remover: tema1.	self assert: usuario cantidadTemas equals: 0.	 ! !
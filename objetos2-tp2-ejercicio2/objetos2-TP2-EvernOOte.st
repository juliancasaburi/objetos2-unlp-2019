Object subclass: #EvernOOte	instanceVariableNames: 'usuarios'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!EvernOOte methodsFor: 'initialization' stamp: 'JulianCasaburi 4/28/2019 20:57'!initialize	usuarios := OrderedCollection new.! !!EvernOOte methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/30/2019 22:18'!cantidadUsuarios	^ usuarios size.! !!EvernOOte methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:41'!agregarUsuario: unNombre	| usuario |		usuario := Usuario conNombre: unNombre.	usuarios add: usuario.! !TestCase subclass: #EvernOOteTest	instanceVariableNames: 'evernOOte usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!EvernOOteTest methodsFor: 'initialization' stamp: 'JulianCasaburi 4/30/2019 22:17'!setUp	evernOOte := EvernOOte new.! !!EvernOOteTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:31'!testCantidadUsuarios	self assert: evernOOte cantidadUsuarios equals: 0.! !!EvernOOteTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:18'!testAgregarUsuario	self assert: evernOOte cantidadUsuarios equals: 0.	evernOOte agregarUsuario: 'juancarlosbatman'.	self assert: evernOOte cantidadUsuarios equals: 1! !Object subclass: #Nota	instanceVariableNames: 'titulo texto fechaDeCreacion tags'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!Nota methodsFor: 'accessing' stamp: 'JulianCasaburi 4/27/2019 02:32'!titulo	^ titulo! !!Nota methodsFor: 'accessing' stamp: 'JulianCasaburi 4/27/2019 02:35'!texto: unString	texto := unString.! !!Nota methodsFor: 'accessing' stamp: 'JulianCasaburi 4/27/2019 02:55'!fechaDeCreacion	^ fechaDeCreacion.! !!Nota methodsFor: 'accessing' stamp: 'JulianCasaburi 4/27/2019 02:31'!titulo: unTitulo	titulo := unTitulo.! !!Nota methodsFor: 'accessing' stamp: 'JulianCasaburi 4/27/2019 02:35'!texto	^ texto.! !!Nota methodsFor: 'accessing' stamp: 'JulianCasaburi 4/30/2019 22:26'!cantidadTags	^ tags size! !!Nota methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:43'!removerTag: unTag	tags remove: unTag.! !!Nota methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:40'!agregarTag: unTag	tags add: unTag.! !!Nota methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/30/2019 22:22'!tamaño	^ (texto size) + (titulo size) + (tags size) + 10.! !!Nota methodsFor: 'initialization' stamp: 'JulianCasaburi 4/30/2019 22:23'!initialize	tags := OrderedCollection new.	fechaDeCreacion := Date today.	titulo := 'Nueva nota sin titulo'.	texto:= ''.! !TestCase subclass: #NotaTest	instanceVariableNames: 'nota'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!NotaTest methodsFor: 'initialization' stamp: 'JulianCasaburi 4/30/2019 22:19'!setUp	nota := Nota new.! !!NotaTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:25'!testTexto	self assert: nota texto equals: ''.		nota texto: 'Un texto'.	self assert: nota texto equals: 'Un texto'.! !!NotaTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:27'!testAgregarTag	self assert: nota cantidadTags equals: 0.		nota agregarTag: 'Tag 1'.	self assert: nota cantidadTags equals: 1.		nota agregarTag: 'Tag 2'.	self assert: nota cantidadTags equals: 2.! !!NotaTest methodsFor: 'tests' stamp: 'JulianCasaburi 3/7/2021 13:43'!testRemoverTag	self assert: nota cantidadTags equals: 0.		nota agregarTag: 'Tag 1'.	self assert: nota cantidadTags equals: 1.		nota removerTag: 'Tag 1'.	self assert: nota cantidadTags equals: 0.! !!NotaTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:27'!testCantidadTags	self assert: nota cantidadTags equals: 0.	! !!NotaTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:25'!testTitulo	self assert: nota titulo equals: 'Nueva nota sin titulo'.		nota titulo: 'Otro titulo'.	self assert: nota titulo equals: 'Otro titulo'.! !!NotaTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:22'!testTamaño	self assert: nota tamaño equals: 31.! !Object subclass: #Notebook	instanceVariableNames: 'titulo notas'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!Notebook methodsFor: 'accessing' stamp: 'JulianCasaburi 4/27/2019 02:28'!titulo	^ titulo.! !!Notebook methodsFor: 'accessing' stamp: 'JulianCasaburi 4/27/2019 02:52'!notas	^ notas.! !!Notebook methodsFor: 'initialization' stamp: 'JulianCasaburi 4/27/2019 02:28'!initializeConTitulo: unTitulo	titulo := unTitulo.	notas := OrderedCollection new.! !!Notebook methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:39'!notasFecha: unDate	^ notas select: [ :unaNota | unaNota fechaDeCreacion = unDate ].! !!Notebook methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/30/2019 22:29'!crearNota	| nota |	nota := Nota new.	notas add: nota.	^ nota.! !!Notebook methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:46'!borrarNota: unaNota	notas remove: unaNota.! !!Notebook methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/30/2019 22:30'!cantidadNotas	^ notas size.! !!Notebook methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:34'!tamaño	^ notas inject: 0 into: [:tamaño :unaNota| tamaño + unaNota tamaño ].! !!Notebook methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/30/2019 22:37'!notaConTitulo: unTitulo		^notas detect: [ :unaNota | unaNota titulo = unTitulo.] ifNone: [ ^nil ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Notebook class	instanceVariableNames: ''!!Notebook class methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:28'!conTitulo: unTitulo	^self new initializeConTitulo: unTitulo; yourself.! !TestCase subclass: #NotebookTest	instanceVariableNames: 'notebook'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!NotebookTest methodsFor: 'initialization' stamp: 'JulianCasaburi 4/30/2019 22:34'!setUp	notebook := Notebook conTitulo: 'Notebook Test'.! !!NotebookTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:42'!testTamaño	| nota1 nota2 |	self assert: notebook tamaño equals: 0.		nota1 := notebook crearNota.	self assert: notebook tamaño equals: 31.		nota2 := notebook crearNota.	self assert: notebook tamaño equals: 62.	nota2 titulo: 'Esta nota pesa 27'.	self assert: notebook tamaño equals: 58.! !!NotebookTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:32'!testCantidadNotas	self assert: notebook cantidadNotas equals: 0.! !!NotebookTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:36'!testNotaConTitulo	| nota notaReturn |	nota := notebook crearNota.	nota titulo: 'Titulo test'.		notaReturn := notebook notaConTitulo: nota titulo.		self assert: nota equals: notaReturn.	! !!NotebookTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:29'!testTitulo	self assert: notebook titulo equals: 'Notebook Test'! !!NotebookTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:33'!testCrearNota	| nota |		self assert: notebook cantidadNotas equals: 0.			nota := notebook crearNota.	self assert: notebook cantidadNotas equals: 1.	! !!NotebookTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:35'!testBorrarNota	| nota |	nota := notebook crearNota.		self assert: notebook cantidadNotas equals: 1.		notebook borrarNota: nota.	self assert: notebook cantidadNotas equals: 0.	! !Object subclass: #Usuario	instanceVariableNames: 'nombre notebooks'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!Usuario methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:37'!crearNotebook: unTitulo	| nb |	nb := Notebook conTitulo: unTitulo.	notebooks add: nb.	^ nb.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 3/7/2021 13:37'!notasDeNotebook: unTitulo	| noteBook |	noteBook := notebooks detect: [ :unNotebook | unNotebook titulo = unTitulo ].	^ noteBook notas.	! !!Usuario methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/30/2019 22:12'!cantidadNotebooks	^ notebooks size.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:32'!borrarNotebook: unNotebook	notebooks remove: unNotebook.! !!Usuario methodsFor: 'initialization' stamp: 'JulianCasaburi 4/27/2019 02:27'!initializeConNombre: unNombre	nombre := unNombre.	notebooks := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'as yet unclassified' stamp: 'JulianCasaburi 4/27/2019 02:26'!conNombre: unNombre	^ self new initializeConNombre: unNombre; yourself.! !TestCase subclass: #UsuarioTest	instanceVariableNames: 'usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos2-TP2-EvernOOte'!!UsuarioTest methodsFor: 'initialization' stamp: 'JulianCasaburi 4/30/2019 22:10'!setUp	usuario := Usuario conNombre: 'juancarlosbatman'! !!UsuarioTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:15'!testBorrarNotebook	| notebook |		"El usuario se inicializa sin notebooks"	self assert: usuario cantidadNotebooks equals: 0.		"Creo un notebook"	notebook := usuario crearNotebook: 'Notebook test'.	self assert: usuario cantidadNotebooks equals: 1.		"Elimino el notebook agregado"	usuario borrarNotebook: notebook.	self assert: usuario cantidadNotebooks equals: 0.! !!UsuarioTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:14'!testCrearNotebook		"El usuario se inicializa sin notebooks"	self assert: usuario cantidadNotebooks equals: 0.		"Creo un notebook"	usuario crearNotebook: 'Notebook test'.		self assert: usuario cantidadNotebooks equals: 1.	! !!UsuarioTest methodsFor: 'tests' stamp: 'JulianCasaburi 4/30/2019 22:15'!testCantidadNotebooks	self assert: usuario cantidadNotebooks equals: 0.	! !